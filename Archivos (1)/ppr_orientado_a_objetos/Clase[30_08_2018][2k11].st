Object subclass: #Trabajo	instanceVariableNames: 'codigo empleado vehiculo tiempo'	classVariableNames: ''	poolDictionaries: ''	category: 'Clase[30_08_2018][2k11]'!!Trabajo methodsFor: 'inicializacion' stamp: 'carlos 8/30/2018 10:22'!initialize	super initialize.	codigo := 0.	empleado := 'Sin definir '.	tiempo := 0.	vehiculo := nil! !!Trabajo methodsFor: 'propios' stamp: 'carlos 8/30/2018 10:26'!calcularCosto	"Permite calcular el costo total de reparacion del trabajo realizado . "	^ vehiculo calcularCosto ! !!Trabajo methodsFor: 'propios' stamp: 'carlos 8/30/2018 10:32'!asString	"Permite obtener el estado de un objeto Trabajo como una cadena . "	^ 'Codigo : ',codigo ,' 	Responsable : ',empleado asString  ,' Tiempo de rep : ',tiempo asString , 'Datos del vehiculo Vehiculo :  ' ,vehiculo asString .		 ! !!Trabajo methodsFor: 'acceso' stamp: 'carlos 8/30/2018 10:21'!empleado	^ empleado! !!Trabajo methodsFor: 'acceso' stamp: 'carlos 8/30/2018 10:21'!tiempo	^ tiempo! !!Trabajo methodsFor: 'acceso' stamp: 'carlos 8/30/2018 10:21'!tiempo: anObject	tiempo := anObject! !!Trabajo methodsFor: 'acceso' stamp: 'carlos 8/30/2018 10:21'!vehiculo	^ vehiculo! !!Trabajo methodsFor: 'acceso' stamp: 'carlos 8/30/2018 10:21'!codigo: anObject	codigo := anObject! !!Trabajo methodsFor: 'acceso' stamp: 'carlos 8/30/2018 10:21'!empleado: anObject	empleado := anObject! !!Trabajo methodsFor: 'acceso' stamp: 'carlos 8/30/2018 10:21'!codigo	^ codigo! !!Trabajo methodsFor: 'acceso' stamp: 'carlos 8/30/2018 10:21'!vehiculo: anObject	vehiculo := anObject! !Object subclass: #Vehiculo	instanceVariableNames: 'km marca anio itv'	classVariableNames: ''	poolDictionaries: ''	category: 'Clase[30_08_2018][2k11]'!!Vehiculo methodsFor: 'acceso' stamp: 'carlos 8/30/2018 09:13'!itv	^ itv! !!Vehiculo methodsFor: 'acceso' stamp: 'carlos 8/30/2018 09:13'!marca: anObject	marca := anObject! !!Vehiculo methodsFor: 'acceso' stamp: 'carlos 8/30/2018 09:34'!asString 	"Permite obtener el estado del objeto como cadena "	|tieneItv |			tieneItv :='No'	itv ifTrue: [ tieneItv  :='SI' ].		^ 'Marca :',marca ,' |Anio : ', anio asString , '| Itv :  ', tieneItv , 'Kms : ' , km asString .	! !!Vehiculo methodsFor: 'acceso' stamp: 'carlos 8/30/2018 09:13'!km	^ km! !!Vehiculo methodsFor: 'acceso' stamp: 'carlos 8/30/2018 09:13'!itv: anObject	itv := anObject! !!Vehiculo methodsFor: 'acceso' stamp: 'carlos 8/30/2018 09:13'!anio	^ anio! !!Vehiculo methodsFor: 'acceso' stamp: 'carlos 8/30/2018 09:13'!km: anObject	km := anObject! !!Vehiculo methodsFor: 'acceso' stamp: 'carlos 8/30/2018 09:13'!marca	^ marca! !!Vehiculo methodsFor: 'acceso' stamp: 'carlos 8/30/2018 09:13'!anio: anObject	anio := anObject! !!Vehiculo methodsFor: 'acceso' stamp: 'carlos 8/30/2018 09:51'!calcularCosto 	"Permite calcular el costo de reparacion del vehiculo . Esto es responsabilidad de cada clase hija . "		^ self subclassResponsibility ! !!Vehiculo methodsFor: 'inicializacion' stamp: 'carlos 8/30/2018 09:21'!initialize	super initialize.	anio := 0.	itv := false.	km := 0.	marca := 'Sin definir '! !Vehiculo subclass: #Automovil	instanceVariableNames: 'traccion esUtilitario'	classVariableNames: ''	poolDictionaries: ''	category: 'Clase[30_08_2018][2k11]'!!Automovil methodsFor: 'accessing' stamp: 'carlos 8/30/2018 09:18'!traccion	^ traccion! !!Automovil methodsFor: 'accessing' stamp: 'carlos 8/30/2018 09:18'!esUtilitario	^ esUtilitario! !!Automovil methodsFor: 'accessing' stamp: 'carlos 8/30/2018 09:18'!traccion: anObject	traccion := anObject! !!Automovil methodsFor: 'accessing' stamp: 'carlos 8/30/2018 09:18'!esUtilitario: anObject	esUtilitario := anObject! !!Automovil methodsFor: 'metodos_automovil' stamp: 'carlos 8/30/2018 10:15'!initialize	super initialize.	esUtilitario := False .	traccion := 'Sin definir'! !!Automovil methodsFor: 'metodos_automovil' stamp: 'carlos 8/30/2018 10:19'!calcularCosto	"permite calcular el costo de reparacion de Automvil ."	| precio |		precio := 300.		esUtilitario ifTrue: [ precio := precio  * 1.1 ].		itv ifFalse: [ precio := precio  + 200 ].		^ precio ! !Vehiculo subclass: #Camion	instanceVariableNames: 'ConAcoplado'	classVariableNames: ''	poolDictionaries: ''	category: 'Clase[30_08_2018][2k11]'!!Camion methodsFor: 'metodos' stamp: 'carlos 8/30/2018 10:05'!CalcularCosto	"permite calcular el costo de reparacion de un obj Camion"	| precio |	precio := 1200.	(km > 20000 and: ConAcoplado) ifTrue: [  precio := precio  + 200] 	ifFalse: [ precio := precio * (1.25) ].	^ precio ! !!Camion methodsFor: 'initialization' stamp: 'carlos 8/30/2018 09:52'!initialize	super initialize.	ConAcoplado := False ! !!Camion methodsFor: 'accessing' stamp: 'carlos 8/30/2018 09:46'!conAcoplado: anObject	ConAcoplado := anObject! !!Camion methodsFor: 'accessing' stamp: 'carlos 8/30/2018 09:46'!conAcoplado	^ ConAcoplado! !!Camion methodsFor: 'accessing' stamp: 'carlos 8/30/2018 10:06'!asString	| tieneAcoplado |	tieneAcoplado := 'No'.	ConAcoplado ifTrue: [ tieneAcoplado := 'SI' ].		^super asString ,'Con acoplado ', tieneAcoplado .	! !Vehiculo subclass: #Colectivo	instanceVariableNames: 'tipo asientos'	classVariableNames: ''	poolDictionaries: ''	category: 'Clase[30_08_2018][2k11]'!!Colectivo methodsFor: 'initialization' stamp: 'carlos 8/30/2018 10:11'!initialize	"super sirve para inicializar los atrbutos heredados de la manera en que fueron definidos . ej itv no fue creada con nill sino con un valor booleano  "	super initialize.	asientos := 0.	tipo := 0.! !!Colectivo methodsFor: 'accessing' stamp: 'carlos 8/30/2018 10:07'!tipo	^ tipo! !!Colectivo methodsFor: 'accessing' stamp: 'carlos 8/30/2018 10:07'!asientos	^ asientos! !!Colectivo methodsFor: 'accessing' stamp: 'carlos 8/30/2018 10:07'!asientos: anObject	asientos := anObject! !!Colectivo methodsFor: 'accessing' stamp: 'carlos 8/30/2018 10:07'!tipo: anObject	tipo := anObject! !!Colectivo methodsFor: 'metodos_propios' stamp: 'carlos 8/30/2018 10:14'!calcularCosto 	"calcularcosto para los colectivos "	| precio |	precio  := 500 .	^ precio ! !