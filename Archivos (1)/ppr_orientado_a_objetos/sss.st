Object subclass: #Autor	instanceVariableNames: 'nombre categoria email'	classVariableNames: ''	poolDictionaries: ''	category: 'CarlosTP'!!Autor methodsFor: 'initialization' stamp: 'aaaa 9/10/2018 11:15'!initialize	super initialize.	categoria := nil.	email := nil.	nombre := nil.! !!Autor methodsFor: 'accessing' stamp: 'aaaa 9/10/2018 11:15'!email	^ email! !!Autor methodsFor: 'accessing' stamp: 'aaaa 9/10/2018 11:15'!email: anObject	email := anObject! !!Autor methodsFor: 'accessing' stamp: 'aaaa 9/10/2018 11:15'!nombre: anObject	nombre := anObject! !!Autor methodsFor: 'accessing' stamp: 'aaaa 9/10/2018 11:15'!categoria: anObject	categoria := anObject! !!Autor methodsFor: 'accessing' stamp: 'aaaa 9/10/2018 11:15'!categoria	^ categoria! !!Autor methodsFor: 'accessing' stamp: 'aaaa 9/10/2018 11:15'!nombre	^ nombre! !PackageManifest subclass: #ManifestCarlosTP	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'CarlosTP'!!ManifestCarlosTP commentStamp: '<historical>' prior: 0!I store metadata for this package. These meta data are used by other tools such as the SmalllintManifestChecker and the critics Browser!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!ManifestCarlosTP class	instanceVariableNames: ''!!ManifestCarlosTP class methodsFor: 'code-critics' stamp: 'aaaa 9/10/2018 10:52'!ruleRBUnreferencedVariablesRuleV1FalsePositive	^ #(#(#(#RGClassDefinition #(#Trabajjo)) #'2018-09-10T10:52:10.297664-03:00') )! !!ManifestCarlosTP class methodsFor: 'code-critics' stamp: 'aaaa 9/10/2018 10:52'!ruleRBClassNotReferencedRuleV1FalsePositive	^ #(#(#(#RGClassDefinition #(#Trabajjo)) #'2018-09-10T10:52:08.964664-03:00') )! !!ManifestCarlosTP class methodsFor: 'code-critics' stamp: 'aaaa 9/10/2018 10:52'!ruleRBOnlyReadOrWrittenVariableRuleV1FalsePositive	^ #(#(#(#RGClassDefinition #(#Trabajjo)) #'2018-09-10T10:52:11.822664-03:00') )! !!ManifestCarlosTP class methodsFor: 'code-critics' stamp: 'aaaa 9/10/2018 10:52'!ruleRBNoClassCommentRuleV1FalsePositive	^ #(#(#(#RGClassDefinition #(#Trabajjo)) #'2018-09-10T10:52:05.081664-03:00') )! !Object subclass: #Trabajjo	instanceVariableNames: 'titulo tema autores resumen estado unAutor'	classVariableNames: ''	poolDictionaries: ''	category: 'CarlosTP'!!Trabajjo methodsFor: 'asString' stamp: 'aaaa 9/10/2018 11:00'!mostrarMensajes 	"permite visulaizar los datos .."	^ 'Autores : ', autores ,'|Estado : ',estado asString ,'Resumen :',resumen,'|Tema : ',tema ,'|Titulo : ',titulo .	! !!Trabajjo methodsFor: 'propios' stamp: 'aaaa 9/10/2018 11:46'!cantidadAutores	"retornar  la cantidad de autores que tiene un trabajo"	|aux rta |	rta:='La cantidad de autores  es :'.	aux:=0.	(Autor notEmpty)ifTrue:[Autor do:[ aux :=aux + 1]].	^rta,aux asString .! !!Trabajjo methodsFor: 'propios' stamp: 'aaaa 9/10/2018 11:25'!agregarUnAutor:  unAutorr	"addAutor en la coleccion"	(unAutorr isKindOf: Autor) ifTrue: [ Autor add: unAutorr  ].	! !!Trabajjo methodsFor: 'initialization' stamp: 'aaaa 9/10/2018 11:10'!initialize	super initialize.	autores := OrderedCollection  new  .	estado := nil.	resumen := nil.	tema := nil.	titulo := nil.! !!Trabajjo methodsFor: 'accessing' stamp: 'aaaa 9/10/2018 10:52'!autores	^ autores! !!Trabajjo methodsFor: 'accessing' stamp: 'aaaa 9/10/2018 10:52'!estado	^ estado! !!Trabajjo methodsFor: 'accessing' stamp: 'aaaa 9/10/2018 10:52'!titulo: anObject	titulo := anObject! !!Trabajjo methodsFor: 'accessing' stamp: 'aaaa 9/10/2018 10:52'!titulo	^ titulo! !!Trabajjo methodsFor: 'accessing' stamp: 'aaaa 9/10/2018 10:52'!tema: anObject	tema := anObject! !!Trabajjo methodsFor: 'accessing' stamp: 'aaaa 9/10/2018 10:52'!tema	^ tema! !!Trabajjo methodsFor: 'accessing' stamp: 'aaaa 9/10/2018 10:52'!autores: anObject	autores := anObject! !!Trabajjo methodsFor: 'accessing' stamp: 'aaaa 9/10/2018 10:52'!resumen: anObject	resumen := anObject! !!Trabajjo methodsFor: 'accessing' stamp: 'aaaa 9/10/2018 10:52'!resumen	^ resumen! !!Trabajjo methodsFor: 'accessing' stamp: 'aaaa 9/10/2018 10:52'!estado: anObject	estado := anObject! !