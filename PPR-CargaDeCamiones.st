Object subclass: #Camion	instanceVariableNames: 'estado cargaMaxima cargas patente'	classVariableNames: ''	poolDictionaries: ''	category: 'PPR-CargaDeCamiones'!!Camion commentStamp: 'Ing. Martín Polliotto 9/15/2012 14:56' prior: 0!CLASE CONTENEDORA DE CARGAS!!!!Camion methodsFor: 'acceso' stamp: 'Ing. Martín Polliotto 9/15/2012 16:35'!cargaMaxima	"Answer the value of cargaMaxima"	^ cargaMaxima! !!Camion methodsFor: 'acceso' stamp: 'Ing. Martín Polliotto 9/15/2012 16:35'!cargaMaxima: anObject	"Set the value of cargaMaxima"	cargaMaxima := anObject! !!Camion methodsFor: 'acceso' stamp: 'Ing. Martín Polliotto 9/15/2012 14:57'!cargas	"Answer the value of cargas"	^ cargas! !!Camion methodsFor: 'acceso' stamp: 'Ing. Martín Polliotto 9/15/2012 14:57'!cargas: anObject	"Set the value of cargas"	cargas := anObject! !!Camion methodsFor: 'acceso' stamp: 'Ing. Martín Polliotto 9/15/2012 14:57'!estado	"Answer the value of estado"	^ estado! !!Camion methodsFor: 'acceso' stamp: 'Ing. Martín Polliotto 9/15/2012 14:57'!estado: anObject	"Set the value of estado"	estado := anObject! !!Camion methodsFor: 'acceso' stamp: 'Ing. Martín Polliotto 9/15/2012 15:02'!patente	"Answer the value of patente"	^ patente! !!Camion methodsFor: 'acceso' stamp: 'Ing. Martín Polliotto 9/15/2012 15:02'!patente: anObject	"Set the value of patente"	patente := anObject! !!Camion methodsFor: 'constructor' stamp: 'Ing. Martín Polliotto 9/15/2012 18:06'!initialize	"Constructor por defecto clase Camion"	cargaMaxima:=1000.	estado:= 'Disponible'.	cargas:= Bag new.	! !!Camion methodsFor: 'negocio' stamp: 'Ing. Martín Polliotto 9/15/2012 17:11'!aReparacion	"Asigna el estado 'En reparación' a un camión"	self estado: 'En reparacion'.	self cargas: Bag new.	! !!Camion methodsFor: 'negocio' stamp: 'Ing. Martín Polliotto 9/15/2012 17:35'!bajarCarga: unaCarga	"Permite subir una carga a un camión disponible siempre que no se supere su capacidad total."	| respuesta existe|		respuesta:='Carga bajada de camión'.	(estado = 'Disponible' and: self cantidadCargas>0) 		ifTrue: [ existe:=self cargas remove: unaCarga.				(existe = false)					ifTrue:[ respuesta:='Carga no se encuentra dentro del camión'.]]						ifFalse: [respuesta:='Imposible bajar la carga del camión!!'].			^ respuesta.! !!Camion methodsFor: 'negocio' stamp: 'Ing. Martín Polliotto 9/15/2012 17:27'!cantidadCargas	"Retorna el total de cargas contenidas dentro del camión"		^ self cargas size! !!Camion methodsFor: 'negocio' stamp: 'Ing. Martín Polliotto 9/15/2012 18:02'!cargasEnOrden	"Retorna una colección de cargas ordenadas por peso, siempre que el camión se encuentre disponible y con al menos una carga"	| infoCargasEnOrden |		infoCargasEnOrden := ''.		(self estado = 'Disponible' and: self cantidadCargas > 0)		ifTrue: [cargas asSortedCollection do:[:unaCarga | infoCargasEnOrden:= infoCargasEnOrden , unaCarga asString]]			ifFalse: [infoCargasEnOrden := 'Imposible obtener cargas ordenadas!!'].		^ infoCargasEnOrden	.! !!Camion methodsFor: 'negocio' stamp: 'Ing. Martín Polliotto 9/15/2012 17:15'!deRegreso	"Asigna el estado 'En reparación' a un camión"	self estado: 'Disponible'.	self cargas: Bag new.	! !!Camion methodsFor: 'negocio' stamp: 'Ing. Martín Polliotto 9/15/2012 17:15'!enViaje	"Asigna el estado 'En reparación' a un camión"	self estado: 'En viaje'.	self cargas: Bag new.	! !!Camion methodsFor: 'negocio' stamp: 'Ing. Martín Polliotto 9/17/2012 18:59'!listoParaSalir	"Permite deteminar si un camión se encuentra listo para salir, es decir, está disponible y la carga actual es superior al 75% de carga máxima."		| paraSalir |		paraSalir := 'Camión no disponible o en carga...'.		(self estado = 'Disponible' and: self peso >= (0.75 * self cargaMaxima))		ifTrue: [paraSalir := 'Listo para salir.'].				^ paraSalir	.! !!Camion methodsFor: 'negocio' stamp: 'Ing. Martín Polliotto 9/17/2012 18:24'!masPesado: unPeso	"comment stating purpose of message"	|rtdo|		rtdo:=self cargas select:[:unaCarga| unaCarga peso > unPeso ].	^ rtdo asString! !!Camion methodsFor: 'negocio' stamp: 'Ing. Martín Polliotto 9/15/2012 17:16'!peso	"Permite calcular el peso total del camion, solo en materia de cargas."	| total |	total := 0.		cargas do: [:carga | total := total + carga peso ].		^ total! !!Camion methodsFor: 'negocio' stamp: 'Ing. Martín Polliotto 9/15/2012 17:15'!saleReparado	"Asigna el estado 'En reparación' a un camión"	self estado: 'Disponible'.	self cargas: Bag new.	! !!Camion methodsFor: 'negocio' stamp: 'Ing. Martín Polliotto 9/15/2012 17:22'!subirCarga: unaCarga	"Permite subir una carga a un camión disponible siempre que no se supere su capacidad total."	| cargaActual respuesta|		respuesta:='Carga subida al camión'.	(estado = 'Disponible') 		ifTrue: [cargaActual := self peso.				(cargaActual + unaCarga peso < cargaMaxima)					ifTrue:[ self cargas add: unaCarga]					ifFalse: [ respuesta:='No se pudo subir la carga. Capacidad insuficiente', ' Carga actual: ', self peso, ' kgs.']]		ifFalse: [respuesta:='No se pudo subir la carga. Camión no disponible'].			^ respuesta.! !!Camion methodsFor: 'impresion' stamp: 'Ing. Martín Polliotto 9/20/2012 13:38'!asString	"Retorna el estado actual del camión en formato cadena."	| str infoCargas|		infoCargas:=''.	str:='Camion patente:' , patente ,		 ' capacidad: ' , cargaMaxima , ' estado: ' , estado , ' Carga actual: [ '. 		cargas do:[:carga| infoCargas:= infoCargas , carga asString].		str:=str , infoCargas , ' ]'.					^str	! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Camion class	instanceVariableNames: ''!!Camion class methodsFor: 'constructor' stamp: 'Ing. Martín Polliotto 9/20/2012 13:37'!new: unaPatente	"Constructor con parámetro clase Camion."	| nuevoCamion |	nuevoCamion := Camion new.	nuevoCamion patente: unaPatente.		^ nuevoCamion! !Object subclass: #Carga	instanceVariableNames: 'contenido'	classVariableNames: ''	poolDictionaries: ''	category: 'PPR-CargaDeCamiones'!!Carga commentStamp: 'Ing. Martín Polliotto 9/15/2012 13:28' prior: 0!Clase Hija de Carga!]style[(19)f1!!Carga methodsFor: 'constructor' stamp: 'Ing. Martín Polliotto 9/15/2012 12:18'!initialize	"Constructor por defecto"	contenido:=' '.	! !!Carga methodsFor: 'impresion' stamp: 'Ing. Martín Polliotto 9/20/2012 13:34'!asString	"Retorna la carga en formato cadena"		^ 'Un/a ',  self class name, ' de: ', self contenido	! !!Carga methodsFor: 'negocio' stamp: 'Ing. Martín Polliotto 9/15/2012 14:47'!peso	"Retorna el peso de una carga. Método abstracto"	! !!Carga methodsFor: 'orden' stamp: 'Ing. Martín Polliotto 9/15/2012 17:49'!<= unaCarga	"Permite definir un orden natural de comparación para las cargas"		^ self peso <= unaCarga peso.	! !!Carga methodsFor: 'acceso' stamp: 'Ing. Martín Polliotto 9/15/2012 14:09'!contenido	"Retorna el valor de contenido"	^ contenido! !!Carga methodsFor: 'acceso' stamp: 'Ing. Martín Polliotto 9/15/2012 12:14'!contenido: anObject	"Set the value of contenido"	contenido := anObject! !Carga subclass: #Bidon	instanceVariableNames: 'capacidad densidad'	classVariableNames: ''	poolDictionaries: ''	category: 'PPR-CargaDeCamiones'!!Bidon methodsFor: 'constructor' stamp: 'Ing. Martín Polliotto 9/15/2012 14:04'!initialize	"comment stating purpose of message"	super initialize.	capacidad:=1.	densidad:=1.! !!Bidon methodsFor: 'impresion' stamp: 'Ing. Martín Polliotto 9/20/2012 13:31'!asString	"Retorna un bidón en forma de cadena"	| str |	str:= super asString ,  ' con capacidad: ' , 		capacidad asString , ' litros y densidad: ' , densidad asString.		^ str.	! !!Bidon methodsFor: 'negocio' stamp: 'Ing. Martín Polliotto 9/15/2012 14:49'!peso	"Retorna el peso de una bidón"		^ capacidad * densidad! !!Bidon methodsFor: 'acceso' stamp: 'Ing. Martín Polliotto 9/15/2012 14:02'!capacidad	"Answer the value of capacidad"	^ capacidad! !!Bidon methodsFor: 'acceso' stamp: 'Ing. Martín Polliotto 9/15/2012 14:02'!capacidad: anObject	"Set the value of capacidad"	capacidad := anObject! !!Bidon methodsFor: 'acceso' stamp: 'Ing. Martín Polliotto 9/15/2012 14:02'!densidad	"Answer the value of densidad"	^ densidad! !!Bidon methodsFor: 'acceso' stamp: 'Ing. Martín Polliotto 9/15/2012 14:02'!densidad: anObject	"Set the value of densidad"	densidad := anObject! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Bidon class	instanceVariableNames: ''!!Bidon class methodsFor: 'as yet unclassified' stamp: 'Ing. Martín Polliotto 9/15/2012 14:37'!new: unContenido de: litros densidad: unaDensidad	"comment stating purpose of message"	| nuevoBidon |	nuevoBidon := Bidon new.	nuevoBidon contenido: unContenido.	nuevoBidon capacidad: litros.	nuevoBidon densidad: unaDensidad.		^ nuevoBidon.! !Carga subclass: #Caja	instanceVariableNames: 'peso'	classVariableNames: ''	poolDictionaries: ''	category: 'PPR-CargaDeCamiones'!!Caja methodsFor: 'acceso' stamp: 'Ing. Martín Polliotto 9/15/2012 13:37'!peso	"Answer the value of peso"	^ peso! !!Caja methodsFor: 'acceso' stamp: 'Ing. Martín Polliotto 9/15/2012 13:37'!peso: anObject	"Set the value of peso"	peso := anObject! !!Caja methodsFor: 'impresion' stamp: 'Ing. Martín Polliotto 9/20/2012 13:31'!asString	"Retorna una caja en forma de cadena"	| str |	str:= super asString , ' con peso: ' , peso , 'kg.'.	^ str.! !!Caja methodsFor: 'constructor' stamp: 'Ing. Martín Polliotto 9/15/2012 13:54'!initialize	"Constructor por defecto clase Caja"		super initialize.	peso:=0.	! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Caja class	instanceVariableNames: ''!!Caja class methodsFor: ' constructor' stamp: 'Ing. Martín Polliotto 9/15/2012 14:01'!new: unContenido conPeso: unPeso	"comment stating purpose of message"	| nuevaCaja |	nuevaCaja:= Caja new.	nuevaCaja contenido: unContenido.	nuevaCaja peso: unPeso.		^ nuevaCaja.! !Carga subclass: #Packing	instanceVariableNames: 'pesoPorCaja cantidad pesoEstructura'	classVariableNames: ''	poolDictionaries: ''	category: 'PPR-CargaDeCamiones'!!Packing commentStamp: 'Ing. Martín Polliotto 9/15/2012 13:29' prior: 0!CLASE HIJA DE CARGA!!!!Packing methodsFor: 'constructor' stamp: 'Ing. Martín Polliotto 9/15/2012 16:25'!initialize	"Construtor por defecto clase Packing"	super initialize.	pesoPorCaja:=0.	cantidad:=0.	pesoEstructura:=1! !!Packing methodsFor: 'impresion' stamp: 'Ing. Martín Polliotto 9/20/2012 13:31'!asString	"comment stating purpose of message"	| str |	str:= super asString , ' con ' , 		cantidad asString , ' cajas de ' , pesoPorCaja asString , ' kg.'.			^ str.! !!Packing methodsFor: 'negocio' stamp: 'Ing. Martín Polliotto 9/20/2012 13:37'!peso	"Retorna el peso de un Packing"	^ pesoPorCaja * cantidad + pesoEstructura! !!Packing methodsFor: 'acceso' stamp: 'Ing. Martín Polliotto 9/15/2012 13:57'!cantidad	"Answer the value of cantidad"	^ cantidad! !!Packing methodsFor: 'acceso' stamp: 'Ing. Martín Polliotto 9/15/2012 13:57'!cantidad: anObject	"Set the value of cantidad"	cantidad := anObject! !!Packing methodsFor: 'acceso' stamp: 'Ing. Martín Polliotto 9/15/2012 14:45'!pesoEstructura	"Answer the value of pesoEstructura"	^ pesoEstructura.! !!Packing methodsFor: 'acceso' stamp: 'Ing. Martín Polliotto 9/15/2012 14:46'!pesoEstructura: anObject	"Set the value of pesoEstructura"	pesoEstructura := anObject! !!Packing methodsFor: 'acceso' stamp: 'Ing. Martín Polliotto 9/15/2012 13:57'!pesoPorCaja	"Answer the value of pesoPorCaja"	^ pesoPorCaja! !!Packing methodsFor: 'acceso' stamp: 'Ing. Martín Polliotto 9/15/2012 13:57'!pesoPorCaja: anObject	"Set the value of pesoPorCaja"	pesoPorCaja := anObject! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Packing class	instanceVariableNames: ''!!Packing class methodsFor: ' constructor' stamp: 'Ing. Martín Polliotto 9/15/2012 16:27'!new: unContenido con: cajas de: peso mas: pesoMadera	"Constructor con parámetros clase Packing"		| nuevoPacking |	nuevoPacking:= Packing new.	nuevoPacking contenido: unContenido.	nuevoPacking pesoPorCaja: peso.	nuevoPacking cantidad: cajas.	nuevoPacking pesoEstructura: pesoMadera.		^ nuevoPacking	! !